/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../client.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  CreateRedemptionMutationRequest,
  CreateRedemptionMutationResponse,
  CreateRedemption400,
  CreateRedemption401,
  CreateRedemption403,
  CreateRedemption404,
  CreateRedemption409,
  CreateRedemption417,
  CreateRedemption500,
  CreateRedemption501,
} from '../models/CreateRedemption.ts'
import { useMutation } from '@tanstack/react-query'
import { createRedemption } from '../createRedemption.ts'

export const createRedemptionMutationKey = () => [{ url: '/api/v1/coupons/redemptions' }] as const

export type CreateRedemptionMutationKey = ReturnType<typeof createRedemptionMutationKey>

/**
 * @description Cria um novo resgate para o cupom especificado.
 * @summary Criar Resgate
 * {@link /api/v1/coupons/redemptions}
 */
export function useCreateRedemption<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<CreateRedemptionMutationResponse>,
      ResponseErrorConfig<
        | CreateRedemption400
        | CreateRedemption401
        | CreateRedemption403
        | CreateRedemption404
        | CreateRedemption409
        | CreateRedemption417
        | CreateRedemption500
        | CreateRedemption501
      >,
      { data: CreateRedemptionMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<CreateRedemptionMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? createRedemptionMutationKey()

  return useMutation<
    ResponseConfig<CreateRedemptionMutationResponse>,
    ResponseErrorConfig<
      | CreateRedemption400
      | CreateRedemption401
      | CreateRedemption403
      | CreateRedemption404
      | CreateRedemption409
      | CreateRedemption417
      | CreateRedemption500
      | CreateRedemption501
    >,
    { data: CreateRedemptionMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return createRedemption(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}