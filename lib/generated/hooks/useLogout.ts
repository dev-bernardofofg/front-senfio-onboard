/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../client.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  LogoutMutationRequest,
  LogoutMutationResponse,
  Logout400,
  Logout401,
  Logout403,
  Logout404,
  Logout409,
  Logout417,
  Logout500,
  Logout501,
} from '../models/Logout.ts'
import { useMutation } from '@tanstack/react-query'
import { logout } from '../logout.ts'

export const logoutMutationKey = () => [{ url: '/api/v1/authentication/logout' }] as const

export type LogoutMutationKey = ReturnType<typeof logoutMutationKey>

/**
 * @description Desloga o usu√°rio.
 * @summary Logout
 * {@link /api/v1/authentication/logout}
 */
export function useLogout<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<LogoutMutationResponse>,
      ResponseErrorConfig<Logout400 | Logout401 | Logout403 | Logout404 | Logout409 | Logout417 | Logout500 | Logout501>,
      { data: LogoutMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<LogoutMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? logoutMutationKey()

  return useMutation<
    ResponseConfig<LogoutMutationResponse>,
    ResponseErrorConfig<Logout400 | Logout401 | Logout403 | Logout404 | Logout409 | Logout417 | Logout500 | Logout501>,
    { data: LogoutMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return logout(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}