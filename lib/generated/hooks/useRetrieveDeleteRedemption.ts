/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '../../client.ts'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import type {
  RetrieveDeleteRedemptionQueryResponse,
  RetrieveDeleteRedemptionPathParams,
  RetrieveDeleteRedemption400,
  RetrieveDeleteRedemption401,
  RetrieveDeleteRedemption403,
  RetrieveDeleteRedemption404,
  RetrieveDeleteRedemption409,
  RetrieveDeleteRedemption417,
  RetrieveDeleteRedemption500,
  RetrieveDeleteRedemption501,
} from '../models/RetrieveDeleteRedemption.ts'
import { queryOptions, useQuery } from '@tanstack/react-query'
import { retrieveDeleteRedemption } from '../retrieveDeleteRedemption.ts'

export const retrieveDeleteRedemptionQueryKey = ({ id }: { id: RetrieveDeleteRedemptionPathParams['id'] }) =>
  [{ url: '/api/v1/coupons/redemptions/:id', params: { id: id } }] as const

export type RetrieveDeleteRedemptionQueryKey = ReturnType<typeof retrieveDeleteRedemptionQueryKey>

export function retrieveDeleteRedemptionQueryOptions(
  { id }: { id: RetrieveDeleteRedemptionPathParams['id'] },
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const queryKey = retrieveDeleteRedemptionQueryKey({ id })
  return queryOptions<
    ResponseConfig<RetrieveDeleteRedemptionQueryResponse>,
    ResponseErrorConfig<
      | RetrieveDeleteRedemption400
      | RetrieveDeleteRedemption401
      | RetrieveDeleteRedemption403
      | RetrieveDeleteRedemption404
      | RetrieveDeleteRedemption409
      | RetrieveDeleteRedemption417
      | RetrieveDeleteRedemption500
      | RetrieveDeleteRedemption501
    >,
    ResponseConfig<RetrieveDeleteRedemptionQueryResponse>,
    typeof queryKey
  >({
    enabled: !!id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return retrieveDeleteRedemption({ id }, config)
    },
  })
}

/**
 * @description Obtém ou remove um resgate específico.
 * @summary Detalhes do Resgate
 * {@link /api/v1/coupons/redemptions/:id}
 */
export function useRetrieveDeleteRedemption<
  TData = ResponseConfig<RetrieveDeleteRedemptionQueryResponse>,
  TQueryData = ResponseConfig<RetrieveDeleteRedemptionQueryResponse>,
  TQueryKey extends QueryKey = RetrieveDeleteRedemptionQueryKey,
>(
  { id }: { id: RetrieveDeleteRedemptionPathParams['id'] },
  options: {
    query?: Partial<
      QueryObserverOptions<
        ResponseConfig<RetrieveDeleteRedemptionQueryResponse>,
        ResponseErrorConfig<
          | RetrieveDeleteRedemption400
          | RetrieveDeleteRedemption401
          | RetrieveDeleteRedemption403
          | RetrieveDeleteRedemption404
          | RetrieveDeleteRedemption409
          | RetrieveDeleteRedemption417
          | RetrieveDeleteRedemption500
          | RetrieveDeleteRedemption501
        >,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? retrieveDeleteRedemptionQueryKey({ id })

  const query = useQuery(
    {
      ...retrieveDeleteRedemptionQueryOptions({ id }, config),
      queryKey,
      ...queryOptions,
    } as unknown as QueryObserverOptions,
    queryClient,
  ) as UseQueryResult<
    TData,
    ResponseErrorConfig<
      | RetrieveDeleteRedemption400
      | RetrieveDeleteRedemption401
      | RetrieveDeleteRedemption403
      | RetrieveDeleteRedemption404
      | RetrieveDeleteRedemption409
      | RetrieveDeleteRedemption417
      | RetrieveDeleteRedemption500
      | RetrieveDeleteRedemption501
    >
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}