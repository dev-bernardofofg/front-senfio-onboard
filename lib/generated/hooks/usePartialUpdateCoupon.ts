/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../client.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  PartialUpdateCouponMutationRequest,
  PartialUpdateCouponMutationResponse,
  PartialUpdateCouponPathParams,
  PartialUpdateCoupon400,
  PartialUpdateCoupon401,
  PartialUpdateCoupon403,
  PartialUpdateCoupon404,
  PartialUpdateCoupon409,
  PartialUpdateCoupon417,
  PartialUpdateCoupon500,
  PartialUpdateCoupon501,
} from '../models/PartialUpdateCoupon.ts'
import { useMutation } from '@tanstack/react-query'
import { partialUpdateCoupon } from '../partialUpdateCoupon.ts'

export const partialUpdateCouponMutationKey = () => [{ url: '/api/v1/coupons/{id}' }] as const

export type PartialUpdateCouponMutationKey = ReturnType<typeof partialUpdateCouponMutationKey>

/**
 * @description Atualiza parcialmente os detalhes de um cupom existente.
 * @summary Atualizar Parcialmente Cupom
 * {@link /api/v1/coupons/:id}
 */
export function usePartialUpdateCoupon<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<PartialUpdateCouponMutationResponse>,
      ResponseErrorConfig<
        | PartialUpdateCoupon400
        | PartialUpdateCoupon401
        | PartialUpdateCoupon403
        | PartialUpdateCoupon404
        | PartialUpdateCoupon409
        | PartialUpdateCoupon417
        | PartialUpdateCoupon500
        | PartialUpdateCoupon501
      >,
      { id: PartialUpdateCouponPathParams['id']; data?: PartialUpdateCouponMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PartialUpdateCouponMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? partialUpdateCouponMutationKey()

  return useMutation<
    ResponseConfig<PartialUpdateCouponMutationResponse>,
    ResponseErrorConfig<
      | PartialUpdateCoupon400
      | PartialUpdateCoupon401
      | PartialUpdateCoupon403
      | PartialUpdateCoupon404
      | PartialUpdateCoupon409
      | PartialUpdateCoupon417
      | PartialUpdateCoupon500
      | PartialUpdateCoupon501
    >,
    { id: PartialUpdateCouponPathParams['id']; data?: PartialUpdateCouponMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ id, data }) => {
        return partialUpdateCoupon({ id }, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}