/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../client.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  ChangePasswordMutationRequest,
  ChangePasswordMutationResponse,
  ChangePassword400,
  ChangePassword401,
  ChangePassword403,
  ChangePassword404,
  ChangePassword409,
  ChangePassword417,
  ChangePassword500,
  ChangePassword501,
} from '../models/ChangePassword.ts'
import { useMutation } from '@tanstack/react-query'
import { changePassword } from '../changePassword.ts'

export const changePasswordMutationKey = () => [{ url: '/api/v1/authentication/change-password' }] as const

export type ChangePasswordMutationKey = ReturnType<typeof changePasswordMutationKey>

/**
 * @description Altera a senha do usu√°rio autenticado.
 * @summary Alterar senha
 * {@link /api/v1/authentication/change-password}
 */
export function useChangePassword<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<ChangePasswordMutationResponse>,
      ResponseErrorConfig<
        | ChangePassword400
        | ChangePassword401
        | ChangePassword403
        | ChangePassword404
        | ChangePassword409
        | ChangePassword417
        | ChangePassword500
        | ChangePassword501
      >,
      { data?: ChangePasswordMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<ChangePasswordMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? changePasswordMutationKey()

  return useMutation<
    ResponseConfig<ChangePasswordMutationResponse>,
    ResponseErrorConfig<
      | ChangePassword400
      | ChangePassword401
      | ChangePassword403
      | ChangePassword404
      | ChangePassword409
      | ChangePassword417
      | ChangePassword500
      | ChangePassword501
    >,
    { data?: ChangePasswordMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return changePassword(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}