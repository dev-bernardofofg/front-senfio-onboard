/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../client.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type {
  CreateCouponMutationRequest,
  CreateCouponMutationResponse,
  CreateCoupon400,
  CreateCoupon401,
  CreateCoupon403,
  CreateCoupon404,
  CreateCoupon409,
  CreateCoupon417,
  CreateCoupon500,
  CreateCoupon501,
} from '../models/CreateCoupon.ts'
import { useMutation } from '@tanstack/react-query'
import { createCoupon } from '../createCoupon.ts'

export const createCouponMutationKey = () => [{ url: '/api/v1/coupons' }] as const

export type CreateCouponMutationKey = ReturnType<typeof createCouponMutationKey>

/**
 * @description Cria um novo cupom.
 * @summary Criar Cupom
 * {@link /api/v1/coupons}
 */
export function useCreateCoupon<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<CreateCouponMutationResponse>,
      ResponseErrorConfig<
        CreateCoupon400 | CreateCoupon401 | CreateCoupon403 | CreateCoupon404 | CreateCoupon409 | CreateCoupon417 | CreateCoupon500 | CreateCoupon501
      >,
      { data: CreateCouponMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<CreateCouponMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? createCouponMutationKey()

  return useMutation<
    ResponseConfig<CreateCouponMutationResponse>,
    ResponseErrorConfig<
      CreateCoupon400 | CreateCoupon401 | CreateCoupon403 | CreateCoupon404 | CreateCoupon409 | CreateCoupon417 | CreateCoupon500 | CreateCoupon501
    >,
    { data: CreateCouponMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return createCoupon(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}