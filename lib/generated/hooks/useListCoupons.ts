/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '../../client.ts'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import type {
  ListCouponsQueryResponse,
  ListCouponsQueryParams,
  ListCoupons400,
  ListCoupons401,
  ListCoupons403,
  ListCoupons404,
  ListCoupons409,
  ListCoupons417,
  ListCoupons500,
  ListCoupons501,
} from '../models/ListCoupons.ts'
import { queryOptions, useQuery } from '@tanstack/react-query'
import { listCoupons } from '../listCoupons.ts'

export const listCouponsQueryKey = (params?: ListCouponsQueryParams) => [{ url: '/api/v1/coupons' }, ...(params ? [params] : [])] as const

export type ListCouponsQueryKey = ReturnType<typeof listCouponsQueryKey>

export function listCouponsQueryOptions(params?: ListCouponsQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const queryKey = listCouponsQueryKey(params)
  return queryOptions<
    ResponseConfig<ListCouponsQueryResponse>,
    ResponseErrorConfig<ListCoupons400 | ListCoupons401 | ListCoupons403 | ListCoupons404 | ListCoupons409 | ListCoupons417 | ListCoupons500 | ListCoupons501>,
    ResponseConfig<ListCouponsQueryResponse>,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return listCoupons(params, config)
    },
  })
}

/**
 * @description Lista todos os cupons dispon√≠veis.
 * @summary Listar Cupons
 * {@link /api/v1/coupons}
 */
export function useListCoupons<
  TData = ResponseConfig<ListCouponsQueryResponse>,
  TQueryData = ResponseConfig<ListCouponsQueryResponse>,
  TQueryKey extends QueryKey = ListCouponsQueryKey,
>(
  params?: ListCouponsQueryParams,
  options: {
    query?: Partial<
      QueryObserverOptions<
        ResponseConfig<ListCouponsQueryResponse>,
        ResponseErrorConfig<
          ListCoupons400 | ListCoupons401 | ListCoupons403 | ListCoupons404 | ListCoupons409 | ListCoupons417 | ListCoupons500 | ListCoupons501
        >,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? listCouponsQueryKey(params)

  const query = useQuery(
    {
      ...listCouponsQueryOptions(params, config),
      queryKey,
      ...queryOptions,
    } as unknown as QueryObserverOptions,
    queryClient,
  ) as UseQueryResult<
    TData,
    ResponseErrorConfig<ListCoupons400 | ListCoupons401 | ListCoupons403 | ListCoupons404 | ListCoupons409 | ListCoupons417 | ListCoupons500 | ListCoupons501>
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}