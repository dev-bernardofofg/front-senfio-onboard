/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client.ts'
import type { RequestConfig, ResponseErrorConfig, ResponseConfig } from '../../client.ts'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import type {
  RetrieveUpdateDeleteCouponQueryResponse,
  RetrieveUpdateDeleteCouponPathParams,
  RetrieveUpdateDeleteCoupon400,
  RetrieveUpdateDeleteCoupon401,
  RetrieveUpdateDeleteCoupon403,
  RetrieveUpdateDeleteCoupon404,
  RetrieveUpdateDeleteCoupon409,
  RetrieveUpdateDeleteCoupon417,
  RetrieveUpdateDeleteCoupon500,
  RetrieveUpdateDeleteCoupon501,
} from '../models/RetrieveUpdateDeleteCoupon.ts'
import { queryOptions, useQuery } from '@tanstack/react-query'
import { retrieveUpdateDeleteCoupon } from '../retrieveUpdateDeleteCoupon.ts'

export const retrieveUpdateDeleteCouponQueryKey = ({ id }: { id: RetrieveUpdateDeleteCouponPathParams['id'] }) =>
  [{ url: '/api/v1/coupons/:id', params: { id: id } }] as const

export type RetrieveUpdateDeleteCouponQueryKey = ReturnType<typeof retrieveUpdateDeleteCouponQueryKey>

export function retrieveUpdateDeleteCouponQueryOptions(
  { id }: { id: RetrieveUpdateDeleteCouponPathParams['id'] },
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const queryKey = retrieveUpdateDeleteCouponQueryKey({ id })
  return queryOptions<
    ResponseConfig<RetrieveUpdateDeleteCouponQueryResponse>,
    ResponseErrorConfig<
      | RetrieveUpdateDeleteCoupon400
      | RetrieveUpdateDeleteCoupon401
      | RetrieveUpdateDeleteCoupon403
      | RetrieveUpdateDeleteCoupon404
      | RetrieveUpdateDeleteCoupon409
      | RetrieveUpdateDeleteCoupon417
      | RetrieveUpdateDeleteCoupon500
      | RetrieveUpdateDeleteCoupon501
    >,
    ResponseConfig<RetrieveUpdateDeleteCouponQueryResponse>,
    typeof queryKey
  >({
    enabled: !!id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return retrieveUpdateDeleteCoupon({ id }, config)
    },
  })
}

/**
 * @description Obtém, atualiza ou remove um cupom específico.
 * @summary Detalhes do Cupom
 * {@link /api/v1/coupons/:id}
 */
export function useRetrieveUpdateDeleteCoupon<
  TData = ResponseConfig<RetrieveUpdateDeleteCouponQueryResponse>,
  TQueryData = ResponseConfig<RetrieveUpdateDeleteCouponQueryResponse>,
  TQueryKey extends QueryKey = RetrieveUpdateDeleteCouponQueryKey,
>(
  { id }: { id: RetrieveUpdateDeleteCouponPathParams['id'] },
  options: {
    query?: Partial<
      QueryObserverOptions<
        ResponseConfig<RetrieveUpdateDeleteCouponQueryResponse>,
        ResponseErrorConfig<
          | RetrieveUpdateDeleteCoupon400
          | RetrieveUpdateDeleteCoupon401
          | RetrieveUpdateDeleteCoupon403
          | RetrieveUpdateDeleteCoupon404
          | RetrieveUpdateDeleteCoupon409
          | RetrieveUpdateDeleteCoupon417
          | RetrieveUpdateDeleteCoupon500
          | RetrieveUpdateDeleteCoupon501
        >,
        TData,
        TQueryData,
        TQueryKey
      >
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { query: { client: queryClient, ...queryOptions } = {}, client: config = {} } = options ?? {}
  const queryKey = queryOptions?.queryKey ?? retrieveUpdateDeleteCouponQueryKey({ id })

  const query = useQuery(
    {
      ...retrieveUpdateDeleteCouponQueryOptions({ id }, config),
      queryKey,
      ...queryOptions,
    } as unknown as QueryObserverOptions,
    queryClient,
  ) as UseQueryResult<
    TData,
    ResponseErrorConfig<
      | RetrieveUpdateDeleteCoupon400
      | RetrieveUpdateDeleteCoupon401
      | RetrieveUpdateDeleteCoupon403
      | RetrieveUpdateDeleteCoupon404
      | RetrieveUpdateDeleteCoupon409
      | RetrieveUpdateDeleteCoupon417
      | RetrieveUpdateDeleteCoupon500
      | RetrieveUpdateDeleteCoupon501
    >
  > & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}